useEffect(() => {
  if (search.length > 2) {
    const getData = setTimeout(() => {
      dispatch(getLovData("name_of_employer", search))
        .then((res: any) => {
          let fetchedData = res.data;

          // Define the "Others" option explicitly
          const othersOption = { CODE_DESC: "Others", CODE_VALUE: "9999", checked: false };

          // Remove any existing duplicates of "Others"
          fetchedData = fetchedData.filter(
            (item: LovInputValModel) => item.CODE_DESC.toLowerCase() !== "others"
          );

          // Append "Others" if not explicitly searched
          if (search.toLowerCase() !== "others") {
            fetchedData.push(othersOption);
          } else {
            fetchedData = [othersOption];
          }

          // Update state
          if (fetchedData.length > 0) {
            setShowOption(true);
            setSelectedOption(fetchedData);
          } else {
            setShowOption(false);
          }
        })
        .catch((error: AxiosError) => {
          defaultError();
          return Promise.reject(error);
        });
    }, 500);
    return () => clearTimeout(getData);
  }
}, [search, dispatch])


<input
  type="text"
  value={search || ""} // Ensure 'search' is always defined
  onChange={(e) => setSearch(e.target.value)}
  placeholder="Search..."
/>
