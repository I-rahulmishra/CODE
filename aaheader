 const downloadPdf = (link: any) => {
    console.log(link)
    const lin = document.createElement('a');
    fetch(link, {
      mode: "no-cors",
      headers: {
        // "Content-Type": "application/pdf; charset=utf-8",
        "Authorization": `${process.env.REACT_APP_RTOB_AUTHORIZATION}`,
      },
    }).then((response: any) => {
      console.log(response)
      var blob = new Blob([response.data], { type: "application/pdf" });
      console.log(blob, "blog i  115")
      if (
        navigator.userAgent.indexOf("Chrome") !== -1 ||
        navigator.userAgent.match("CriOS")
      ) {
        blob = new Blob([response.data], { type: "application/pdf" });
      } else {
        var pdfBase64Data = new Uint8Array(response.data);
        blob = new Blob([pdfBase64Data], {
          type: "application/octet-stream",
        });
      }
      const isSafari = /^((?!chrome|andriod).)*safari/i.test(navigator.userAgent);
      if (isSafari) {
        blob = new Blob([response.data], { type: "application/pdf" });
      }
      const dataURL = window.URL.createObjectURL(blob);
      console.log(dataURL, "dataURL in 132")
      lin.href = dataURL;
      if (isSafari) {
        lin.download = pdfName.endsWith('.pdf') ? pdfName : `${pdfName}.pdf`;
        document.body.appendChild(lin);
        lin.click();
        document.body.removeChild(lin);
      } else {
        lin.download = pdfName;
        document.body.appendChild(lin);
        lin.click();
        document.body.removeChild(lin);
      }
    });
  }



const downloadPdf = async (link: string, pdfName: string) => {
  try {
    const response = await fetch(link, {
      headers: {
        Authorization: `${process.env.REACT_APP_RTOB_AUTHORIZATION}`,
      },
    });

    if (!response.ok) {
      throw new Error(`Failed to fetch PDF: ${response.statusText}`);
    }

    // Read the response as a blob
    const blob = await response.blob();

    // Check if the browser is Safari
    const isSafari = /^((?!chrome|android).)*safari/i.test(navigator.userAgent);

    // Create a download link
    const dataURL = window.URL.createObjectURL(blob);
    const lin = document.createElement('a');
    lin.href = dataURL;

    // Set the download file name
    lin.download = pdfName.endsWith('.pdf') ? pdfName : `${pdfName}.pdf`;

    // Append link to the DOM and trigger the download
    document.body.appendChild(lin);
    lin.click();
    document.body.removeChild(lin);

    // Revoke the object URL to free up memory
    window.URL.revokeObjectURL(dataURL);
  } catch (error) {
    console.error('Error downloading PDF:', error);
  }
};
