  const changeHandler = (
    fieldName: string,
    event: React.ChangeEvent<HTMLInputElement>
  ) => {
    if (stageSelector && stageSelector?.[0]?.stageId === CONSTANTS.STAGE_NAMES.AD_3) {
      dispatch(modelAction.toggleModel(false))
      dispatch(stagesAction.userNameChange());
    }
    dispatch(fieldErrorAction.removeFieldError(fieldName))
    setDefaultValue(event.target.value);
    props.handleCallback(props.data, event.target.value);
    props.handleFieldDispatch(props.data, event.target.value);
    setError('');
    if ((props?.data?.mandatory === "Yes" || props?.data?.mandatory === "Conditional") && `${event.target.value}`.length === 0) {
      setError(`${language === CONSTANTS.LANG_EN ? props?.data?.rwb_label_name + ' ' + errorMsg.required_mandatory : language === CONSTANTS.LANG_CN ? errorMsg.required_mandatory_CN + props?.data?.rwb_label_name : errorMsg.required_mandatory_HK + props?.data?.rwb_label_name}`);
      dispatch(
        fieldErrorAction.getFieldError({
        fieldName: props.data.logical_field_name,
      }));
    } else if (`${event.target.value}`[0] === " " || `${event.target.value}`[`${event.target.value}`.length - 1] === " ") {
      setError(`${language === CONSTANTS.LANG_EN ? errorMsg.patterns : language === CONSTANTS.LANG_CN ? errorMsg.patterns_CN : errorMsg.patterns_HK}${props?.data?.rwb_label_name}`)
      dispatch(
        fieldErrorAction.getFieldError({
        fieldName: props.data.logical_field_name,
      }));
    } else if (props?.data?.logical_field_name === 'EEP' && props?.data?.regex && !(`${event.target.value}`.match(props?.data?.regex))) {
      setError(`${language === CONSTANTS.LANG_EN ? errorMsg.patterns + props?.data?.rwb_label_name + '(i.e. C12345678)' : language === CONSTANTS.LANG_CN ? errorMsg.patterns_CN + props?.data?.rwb_label_name : errorMsg.patterns_HK + props?.data?.rwb_label_name}`)
      dispatch(
        fieldErrorAction.getFieldError({
        fieldName: props.data.logical_field_name,
      }));
    } else if (fieldName === 'china_id_number' && !(`${event.target.value}`.match(chinaIdRegex))) {
      setError(`${language === CONSTANTS.LANG_EN ? errorMsg.patternsBank : language === CONSTANTS.LANG_CN ? errorMsg.patterns_CN : errorMsg.patterns_HK}${props?.data?.rwb_label_name} `)
      dispatch(
        fieldErrorAction.getFieldError({
        fieldName: props.data.logical_field_name,
      }));
    } else if (fieldName === 'full_name_chinese' && (`${event.target.value}`.match(chineseRegex))) {
      setError(`${language === CONSTANTS.LANG_EN ? errorMsg.patterns : language === CONSTANTS.LANG_CN ? errorMsg.patterns_CN : errorMsg.patterns_HK}${props?.data?.rwb_label_name} `)
      dispatch(
        fieldErrorAction.getFieldError({
        fieldName: props.data.logical_field_name,
      }));
    } else if (fieldName === 'full_name_chinese' && event.target.value.length < props?.data?.min_length) {
      setError(`${language === CONSTANTS.LANG_EN ? errorMsg.minLength + ' ' + props?.data?.min_length + ' characters' : language === CONSTANTS.LANG_CN ? errorMsg.minLength_CN + props?.data?.min_length + '位字符' : errorMsg.minLength_HK + props?.data?.min_length + '位字符'}`)
      dispatch(
        fieldErrorAction.getFieldError({
        fieldName: props.data.logical_field_name,
      }));
    }
    else if ((props?.data?.mandatory === "Yes") && fieldName === 'last_name') {
      if (!regexAlphaNumericName.test(event.target.value)) {
        dispatch(
          fieldErrorAction.getFieldError({
          fieldName: props.data.logical_field_name,
        }));
        return setError(`${language === CONSTANTS.LANG_EN ? errorMsg.patterns : language === CONSTANTS.LANG_CN ? errorMsg.patterns_CN : errorMsg.patterns_HK}${props?.data?.rwb_label_name}`);
      }
      else {
        if (event.target.value.length < props?.data?.min_length) {
          dispatch(
            fieldErrorAction.getFieldError({
            fieldName: props.data.logical_field_name,
          }));
          return setError(`${language === CONSTANTS.LANG_EN ? errorMsg.minLength + ' ' + props?.data?.min_length + ' characters' : language === CONSTANTS.LANG_CN ? errorMsg.minLength_CN + props?.data?.min_length + '位字符' : errorMsg.minLength_HK + props?.data?.min_length + '位字符'}`)
        } else if (`${event.target.value}`.length === 0) {
          dispatch(
            fieldErrorAction.getFieldError({
            fieldName: props.data.logical_field_name,
          }));
          return setError(`${language === CONSTANTS.LANG_EN ? errorMsg.surnameRequired : language === CONSTANTS.LANG_CN ? errorMsg.surnameRequired_CN : errorMsg.surnameRequired_HK}`);
        }
      }
    }
    else if ((props?.data?.mandatory === "Yes") && fieldName === 'first_name') {
      if (!regexAlphaNumericName.test(event.target.value)) {
        dispatch(
          fieldErrorAction.getFieldError({
          fieldName: props.data.logical_field_name,
        }));
        return setError(`${language === CONSTANTS.LANG_EN ? errorMsg.patterns : language === CONSTANTS.LANG_CN ? errorMsg.patterns_CN : errorMsg.patterns_HK}${props?.data?.rwb_label_name}`);
      }
      else {
        if (event.target.value.length < props?.data?.min_length) {
          dispatch(
            fieldErrorAction.getFieldError({
            fieldName: props.data.logical_field_name,
          }));
          return setError(`${language === CONSTANTS.LANG_EN ? errorMsg.minLength + ' ' + props?.data?.min_length + ' characters' : language === CONSTANTS.LANG_CN ? errorMsg.minLength_CN + props?.data?.min_length + '位字符' : errorMsg.minLength_HK + props?.data?.min_length + '位字符'}`)
        } else if (`${event.target.value}`.length === 0) {
          dispatch(
            fieldErrorAction.getFieldError({
            fieldName: props.data.logical_field_name,
          }));
          return setError(`${language === CONSTANTS.LANG_EN ? errorMsg.givenNameRequired : language === CONSTANTS.LANG_CN ? errorMsg.givenNameRequired_CN : errorMsg.givenNameRequired_HK}`);
        }
      }
    }
    // Promo code validation
    else if (fieldName === "mgm_referral_code") {
      promoCodeValidation(fieldName,event);
    }
    else if (props?.data?.logical_field_name === "res_room_flat" && (event.target.value)) {
      if (!regexAlphaNumeric.test(event.target.value)) {
        setError(`${language === CONSTANTS.LANG_EN ? errorMsg.roomRequiredSplChar : language === CONSTANTS.LANG_CN ? errorMsg.roomRequiredSplChar_CN : errorMsg.roomRequiredSplChar_HK}`);
        return
      }
    }

    else if (props?.data?.logical_field_name === "res_floor" && (event.target.value)) {
      if (!regexAlphaNumeric.test(event.target.value)) {
        setError(`${language === CONSTANTS.LANG_EN ? errorMsg.floorRequiredSplChar : language === CONSTANTS.LANG_CN ? errorMsg.floorRequiredSplChar_CN : errorMsg.floorRequiredSplChar_HK}`);
        return
      }
    }

    else if (props?.data?.logical_field_name === "res_block" && (event.target.value)) {
      if (!regexAlphaNumeric.test(event.target.value)) {
        setError(`${language === CONSTANTS.LANG_EN ? errorMsg.blockRequiredSplChar : language === CONSTANTS.LANG_CN ? errorMsg.blockRequiredSplChar_CN : errorMsg.blockRequiredSplChar_HK}`);
        return
      }
    }

    else if (props?.data?.logical_field_name === "res_building_estate_pt" && (event.target.value)) {
      if (!regexAlphaNumeric.test(event.target.value)) {
        setError(`${language === CONSTANTS.LANG_EN ? errorMsg.buildingEstateSplChar : language === CONSTANTS.LANG_CN ? errorMsg.buildingEstateSplChar_CN : errorMsg.buildingEstateSplChar_HK}`);
        return
      }
      else if (event.target.value.length > 2) {
        if (!regexAlphaNumeric.test(event.target.value)) {
          dispatch(
            fieldErrorAction.getFieldError({
            fieldName: props.data.logical_field_name,
          }));
          setError(`${language === CONSTANTS.LANG_EN ? errorMsg.buildingEstateSplChar : language === CONSTANTS.LANG_CN ? errorMsg.buildingEstateSplChar_CN : errorMsg.buildingEstateSplChar_HK}`);
          dispatch(addressSearchRequest(event.target.value)).then((res: any) => {
            console.log(res, 'response') //need to make service call
          })
        }
      }
    }

    else if (props?.data?.logical_field_name === "off_room_flat" && (event.target.value)) {
      if (!regexAlphaNumeric.test(event.target.value)) {
        setError(`${language === CONSTANTS.LANG_EN ? errorMsg.roomRequiredSplChar : language === CONSTANTS.LANG_CN ? errorMsg.roomRequiredSplChar_CN : errorMsg.roomRequiredSplChar_HK}`);
        return
      }
    }

    else if (props?.data?.logical_field_name === "off_floor" && (event.target.value)) {
      if (!regexAlphaNumeric.test(event.target.value)) {
        setError(`${language === CONSTANTS.LANG_EN ? errorMsg.floorRequiredSplChar : language === CONSTANTS.LANG_CN ? errorMsg.floorRequiredSplChar_CN : errorMsg.floorRequiredSplChar_HK}`);
        return
      }
    }

    else if (props?.data?.logical_field_name === "off_block" && (event.target.value)) {
      if (!regexAlphaNumeric.test(event.target.value)) {
        setError(`${language === CONSTANTS.LANG_EN ? errorMsg.blockRequiredSplChar : language === CONSTANTS.LANG_CN ? errorMsg.blockRequiredSplChar_CN : errorMsg.blockRequiredSplChar_HK}`);
        return
      }
    }

    else if (props?.data?.logical_field_name === "off_building_estate_pt" && (event.target.value)) {
      if (!regexAlphaNumeric.test(event.target.value)) {
        setError(`${language === CONSTANTS.LANG_EN ? errorMsg.buildingEstateSplChar : language === CONSTANTS.LANG_CN ? errorMsg.buildingEstateSplChar_CN : errorMsg.buildingEstateSplChar_HK}`);
        return
      }
    }

    else if (props?.data?.logical_field_name === "annual_income_pl" && (event.target.value)) {
      if (!regexAlphaNumeric.test(event.target.value)) {
        setError(`${language === CONSTANTS.LANG_EN ? errorMsg.annualIncomeInvalid : language === CONSTANTS.LANG_CN ? errorMsg.annualIncomeInvalid_CN : errorMsg.annualIncomeInvalid_HK}`);
        return
      }
    }

    else if (props?.data?.logical_field_name === "name_of_employer" && (event.target.value)) {
      if (!regexAlphaNumeric.test(event.target.value)) {
        setError(`${language === CONSTANTS.LANG_EN ? errorMsg.companyNameInvalid : language === CONSTANTS.LANG_CN ? errorMsg.companyNameInvalid_CN : errorMsg.companyNameInvalid_HK}`);
        return
      }
    }

    else if( props?.data?.logical_field_name === "res_building_estate_pt" && !(event.target.value)){
      setError(`${language===CONSTANTS.LANG_EN?errorMsg.buildingEstateRequired : language === CONSTANTS.LANG_CN ? errorMsg.buildingEstateRequired_CN : errorMsg.buildingEstateRequired_HK}`);
    }

    else if (props?.data?.logical_field_name === "off_room_flat" && !(event.target.value)) {
      setError(`${language === CONSTANTS.LANG_EN ? errorMsg.roomRequired : language === CONSTANTS.LANG_CN ? errorMsg.roomRequired_CN : errorMsg.roomRequired_HK}`);
    }

    else if (props?.data?.logical_field_name === "off_building_estate_pt" && !(event.target.value)) {
      setError(`${language === CONSTANTS.LANG_EN ? errorMsg.buildingEstateRequired : language === CONSTANTS.LANG_CN ? errorMsg.buildingEstateRequired_CN : errorMsg.buildingEstateRequired_HK}`);
    }

    else if (props?.data?.logical_field_name === "annual_income_pl" && !(event.target.value)) {
      setError(`${language === CONSTANTS.LANG_EN ? errorMsg.annualIncomePlRequired : language === CONSTANTS.LANG_CN ? errorMsg.annualIncomePlRequired_CN : errorMsg.annualIncomePlRequired_HK}`);
    }

    else if (props?.data?.logical_field_name === "name_of_employer" && !(event.target.value)) {
      setError(`${language === CONSTANTS.LANG_EN ? errorMsg.nameOfEmpRequired : language === CONSTANTS.LANG_CN ? errorMsg.nameOfEmpRequired_CN : errorMsg.nameOfEmpRequired_HK}`);
    }
    else if (props?.data?.logical_field_name === "name_of_related_person") {

      if (event.target.value.length < props?.data?.min_length) {
        dispatch(
          fieldErrorAction.getFieldError({
          fieldName: props.data.logical_field_name,
        }));
        return setError(`${language === CONSTANTS.LANG_EN ? errorMsg.minLength + ' ' + props?.data?.min_length + ' characters' : language === CONSTANTS.LANG_CN ? errorMsg.minLength_CN + props?.data?.min_length + '位字符' : errorMsg.minLength_HK + props?.data?.min_length + '位字符'}`)
      }
      else if (event.target.value.length === 0) {
        dispatch(
          fieldErrorAction.getFieldError({
          fieldName: props.data.logical_field_name,
        }));
        return setError(`${language === CONSTANTS.LANG_EN ? errorMsg.nameofPersonRequired : language === CONSTANTS.LANG_CN ? errorMsg.nameofPersonRequired_CN : errorMsg.nameofPersonRequired_HK}`);
      }
    }


    else if (props?.data?.logical_field_name === 'email') {
      //eslint-disable-next-line
      const emailCheck = /^[a-zA-Z0-9_%+\-]+([a-zA-Z0-9_%+\.\-]+)@(?!.*?\.\.)([a-zA-Z0-9_\-\.]+)\.([a-zA-Z]{2,5})/;
      //eslint-disable-next-line
      const emailDomainCheck = /^[a-zA-Z0-9_%+\-]+([a-zA-Z0-9_%+\.\-]+)@(?!.*?\.\.)([a-zA-Z0-9_\-\.]+)\.(ir|kp|cu|sy|IR|KP|CU|SY|iR|kP|cU|sY|Ir|Kp|Cu|Sy)$/;
      if (!emailCheck.test(event.target.value)) {
        setError(`${language === CONSTANTS.LANG_EN ? errorMsg.patterns : language === CONSTANTS.LANG_CN ? errorMsg.patterns_CN : errorMsg.patterns_HK}${props?.data?.rwb_label_name}`)
      }
      if (emailDomainCheck.test(event.target.value))
        setError(`${language === CONSTANTS.LANG_EN ? errorMsg.emailDomain : language === CONSTANTS.LANG_CN ? errorMsg.emailDomain_CN : errorMsg.emailDomain_HK}`)
    } else if ((fieldName === "res_name_of_street_1" || fieldName === "res_building_estate_1" || fieldName === "res_room_flat_1" || fieldName === "res_room_flat_3" || fieldName === "res_building_estate_3" || fieldName === "res_name_of_street_3") && (`${event.target.value}`.match(addressChineseRegex))) {
      setError(`${language === CONSTANTS.LANG_EN ? errorMsg.patterns : language === CONSTANTS.LANG_CN ? errorMsg.patterns_CN : errorMsg.patterns_HK}${props?.data?.rwb_label_name} `)
      // address page chinese field less than 5 character pinyin issue fix
      dispatch(isFieldUpdate(props, event.target.value, props?.data?.logical_field_name));
    } else if (((fieldName === "address_res_1" || fieldName === "address_res_2" || fieldName === "address_res_3" || fieldName === "address_mailing_1" || fieldName === "address_mailing_2" || fieldName === "address_mailing_3" || fieldName === "res_name_of_street_2" || fieldName === "res_building_estate_2" || fieldName === "res_room_flat_2" || fieldName === "res_floor_4" || fieldName === "res_building_estate_4" || fieldName === "res_name_of_street_4" || fieldName === "res_room_flat_4" || fieldName === "res_block_3") && (`${event.target.value}`.match(addressNonChineseRegex))) || (event.target.value.includes('  '))) {
      setError(`${language === CONSTANTS.LANG_EN ? errorMsg.patterns : language === CONSTANTS.LANG_CN ? errorMsg.patterns_CN : errorMsg.patterns_HK}${props?.data?.rwb_label_name} `)
    } else if (((fieldName === "state_res_1" || fieldName === "state_mailing_1" || fieldName === "city_res_1" || fieldName === "city_mailing_1") && (`${event.target.value}`.match(stateCityPattern))) || (event.target.value.includes('  '))) {
      setError(`${language === CONSTANTS.LANG_EN ? errorMsg.patterns : language === CONSTANTS.LANG_CN ? errorMsg.patterns_CN : errorMsg.patterns_HK}${props?.data?.rwb_label_name} `)
      // } else if ((fieldName === "state_res_1" || fieldName === "state_mailing_1" || fieldName === "city_res_1" || fieldName === "city_mailing_1") && props?.data?.min_length && `${event.target.value}`.length < props?.data?.min_length) { 
      //   setError(`${language === CONSTANTS.LANG_EN ? errorMsg.patterns : language === CONSTANTS.LANG_CN ? errorMsg.patterns_CN : errorMsg.patterns_HK}${ props?.data?.rwb_label_name} `)
    } else if (props?.data?.min_length && `${event.target.value}`.length < props?.data?.min_length && (fieldName !== 'user_name_ibk')) {
      if (fieldName === 'email') {
        setError(`${language === CONSTANTS.LANG_EN ? errorMsg.patterns : language === CONSTANTS.LANG_CN ? errorMsg.patterns_CN : errorMsg.patterns_HK}${props?.data?.rwb_label_name}`)
      } else if ((`${event.target.value}`.length > 0 && `${event.target.value}`.length < props?.data?.min_length && (fieldName !== 'user_name_ibk'))) {
        if ((fieldName === "res_name_of_street_1" || fieldName === "res_building_estate_1" || fieldName === "res_room_flat_1" || fieldName === "res_room_flat_3" || fieldName === "res_building_estate_3" || fieldName === "res_name_of_street_3")) {
          setError(`${language === CONSTANTS.LANG_EN ? errorMsg.minLength + ' ' + props?.data?.min_length + ' characters' : language === CONSTANTS.LANG_CN ? errorMsg.minLength_CN + props?.data?.min_length + '位字符' : errorMsg.minLength_HK + props?.data?.min_length + '位字符'}`)
          // address page chinese field less than 5 character pinyin issue fix
          dispatch(isFieldUpdate(props, event.target.value, props?.data?.logical_field_name));
        } else {
          setError(`${language === CONSTANTS.LANG_EN ? errorMsg.minLength + ' ' + props?.data?.min_length + ' characters' : language === CONSTANTS.LANG_CN ? errorMsg.minLength_CN + props?.data?.min_length + '位字符' : errorMsg.minLength_HK + props?.data?.min_length + '位字符'}`)
        }
      }
      if ((props?.data?.mandatory === "Yes" || props?.data?.mandatory === "Conditional") && `${event.target.value}`.length === 0) {
        setError(`${language === CONSTANTS.LANG_EN ? props?.data?.rwb_label_name + ' ' + errorMsg.required_mandatory : language === CONSTANTS.LANG_CN ? errorMsg.required_mandatory_CN + props?.data?.rwb_label_name : errorMsg.required_mandatory_HK + props?.data?.rwb_label_name}`);
      }
    }
    else {
      setError((!event.target.validity.valid && (fieldName !== 'user_name_ibk')) ? (`${language === CONSTANTS.LANG_EN ? errorMsg.patterns : language === CONSTANTS.LANG_CN ? errorMsg.patterns_CN : errorMsg.patterns_HK}${props?.data?.rwb_label_name}`) : '');
    }
    if (stageSelector?.[0]?.stageId === CONSTANTS.STAGE_NAMES.AD_3) {
      if (fieldName === 'user_name_ibk') {
        if (event.target.value.length > 0) {
          if (props?.data?.min_length && `${event.target.value}`.length < props?.data?.min_length) {
            setValidationCheckListFn(CONSTANTS.VALIDATION_NAME.LENGTH_CHECK, CONSTANTS.LOV_DATA.NO)
            // setError(`${language === CONSTANTS.LANG_EN ? errorMsg.minLength + ' ' + props?.data?.min_length + ' characters' : language === CONSTANTS.LANG_CN ? errorMsg.minLength_CN + props?.data?.min_length + '位字符' : errorMsg.minLength_HK + props?.data?.min_length + '位字符'}`)
          } else {
            setValidationCheckListFn(CONSTANTS.VALIDATION_NAME.LENGTH_CHECK, CONSTANTS.LOV_DATA.YES)
          }
          if (regexAlphaNumeric.test(event.target.value)) {
            setValidationCheckListFn(CONSTANTS.VALIDATION_NAME.CHARACTER_CHECK, CONSTANTS.LOV_DATA.YES)
            setValidationCheckListFn(CONSTANTS.VALIDATION_NAME.NO_SPECIAL_CHARACTER_CHECK, CONSTANTS.LOV_DATA.YES)
          } else if (!(regexAlphaNumeric.test(event.target.value))) {
            // setValidationCheckListFn(CONSTANTS.VALIDATION_NAME.CHARACTER_CHECK, CONSTANTS.LOV_DATA.NO)
            // setError(`${language === CONSTANTS.LANG_EN ? errorMsg.patterns : language === CONSTANTS.LANG_CN ? errorMsg.patterns_CN : errorMsg.patterns_HK}${ props?.data?.rwb_label_name} `)
            setValidationCheckListFn(CONSTANTS.VALIDATION_NAME.NO_SPECIAL_CHARACTER_CHECK, CONSTANTS.LOV_DATA.NO)
          }
          if (user_names.includes((event.target.value).toLowerCase())) {
            // setError(`${language === CONSTANTS.LANG_EN ? errorMsg.patterns : language === CONSTANTS.LANG_CN ? errorMsg.patterns_CN : errorMsg.patterns_HK}${ props?.data?.rwb_label_name} `)
            setValidationCheckListFn(CONSTANTS.VALIDATION_NAME.FORBIDDEN_CHECK, CONSTANTS.LOV_DATA.NO)
          } else {
            setValidationCheckListFn(CONSTANTS.VALIDATION_NAME.FORBIDDEN_CHECK, CONSTANTS.LOV_DATA.YES)
          }
        } else {
          setValidationCheckListFn(CONSTANTS.VALIDATION_NAME.LENGTH_CHECK, CONSTANTS.NONE)
          setValidationCheckListFn(CONSTANTS.VALIDATION_NAME.NO_SPECIAL_CHARACTER_CHECK, CONSTANTS.NONE)
          setValidationCheckListFn(CONSTANTS.VALIDATION_NAME.CHARACTER_CHECK, CONSTANTS.NONE)
          setValidationCheckListFn(CONSTANTS.VALIDATION_NAME.FORBIDDEN_CHECK, CONSTANTS.NONE)
        }
      }
    }

    // tax info country as HK text box logic
    if (stageSelector?.[0]?.stageId === CONSTANTS.STAGE_NAMES.AD_1) {
      if (fieldName === 'tax_id_no' || fieldName === 'tax_id_no_1' || fieldName === 'tax_id_no_2' || fieldName === 'tax_id_no_3' || fieldName === 'tax_id_no_4') {
        if ((props?.data?.mandatory === "Yes" || props?.data?.mandatory === "Conditional") && `${event.target.value}`.length === 0) {
          setError(`${language === CONSTANTS.LANG_EN ? props?.data?.rwb_label_name + ' ' + errorMsg.required_mandatory : language === CONSTANTS.LANG_CN ? errorMsg.required_mandatory_CN + props?.data?.rwb_label_name : errorMsg.required_mandatory_HK + props?.data?.rwb_label_name}`);
        } else if (fieldName !== 'tax_id_no') {
          for (let i = 1; i <= 4; i++) {
            if (taxIDValue === CONSTANTS.LOV_DATA.HONG_KONG) {
              const taxInfoRegex = new RegExp("^[A-Z]{1}[A-Z]?[0-9]{6,7}[0-9A]{1}$");
              if ((`${event.target.value}`.match(taxInfoRegex))) {
                const tax_id_value = event.target.value;
                setDefaultValue(tax_id_value);
                dispatch(
                  isFieldUpdate(props, tax_id_value, props?.data?.logical_field_name)
                );
                props.handleCallback(props.data, tax_id_value);
              } else {
                setError(`${language === CONSTANTS.LANG_EN ? errorMsg.patterns : language === CONSTANTS.LANG_CN ? errorMsg.patterns_CN : errorMsg.patterns_HK}${props?.data?.rwb_label_name}`);
                return true;
              }
            } else if (taxIDValue !== CONSTANTS.LOV_DATA.HONG_KONG || taxIDValue !== CONSTANTS.LOV_DATA.CHINESE_MAINLAND) {
              const tax_id_value = event.target.value;
              setDefaultValue(tax_id_value);
              dispatch(
                isFieldUpdate(props, tax_id_value, props?.data?.logical_field_name)
              );
              props.handleCallback(props.data, tax_id_value);
              setError('')
            }
          }
        } else {
          if (taxIDValue === CONSTANTS.LOV_DATA.HONG_KONG) {
            const taxInfoRegex = new RegExp("^[A-Z]{1}[A-Z]?[0-9]{6,7}[0-9A]{1}$");
            if ((`${event.target.value}`.match(taxInfoRegex))) {
              const tax_id_value = event.target.value;
              setDefaultValue(tax_id_value);
              dispatch(
                isFieldUpdate(props, tax_id_value, props?.data?.logical_field_name)
              );
              props.handleCallback(props.data, tax_id_value);
            } else {
              setError(`${language === CONSTANTS.LANG_EN ? errorMsg.patterns : language === CONSTANTS.LANG_CN ? errorMsg.patterns_CN : errorMsg.patterns_HK}${props?.data?.rwb_label_name}`);
              return true;
            }
          } else if ((taxIDValue !== CONSTANTS.LOV_DATA.HONG_KONG || taxIDValue !== CONSTANTS.LOV_DATA.CHINESE_MAINLAND)) {
            const tax_id_value = event.target.value;
            setDefaultValue(tax_id_value);
            dispatch(
              isFieldUpdate(props, tax_id_value, props?.data?.logical_field_name)
            );
            props.handleCallback(props.data, tax_id_value);
            setError('')
          }
        }
      }
    }
    else if (props?.data?.logical_field_name === "annual_income_pl") {
      if ((Number(event.target.value) === 0)) {
        setError(`${language === CONSTANTS.LANG_EN ? errorMsg.annualIncomePlValid : language === CONSTANTS.LANG_CN ? errorMsg.annualIncomePlValid_CN : errorMsg.annualIncomePlValid_HK}`);
      }
      if (!(Number(event.target.value) >= 96000)) {
        setError(`${language === CONSTANTS.LANG_EN ? errorMsg.annualIncomePl : language === CONSTANTS.LANG_CN ? errorMsg.annualIncomePl_CN : errorMsg.annualIncomePl_HK}`);
      }
    }
    else {
      setError(!event.target.validity.valid ? (`${language === CONSTANTS.LANG_EN ? errorMsg.patterns : language === CONSTANTS.LANG_CN ? errorMsg.patterns_CN : errorMsg.patterns_HK}${props?.data?.rwb_label_name}`) : '');
    }
    if (event.target.validity.valid) {
      props.handleCallback(props.data, event.target.value);
      dispatch(isFieldValueUpdate(props, stageSelector, event.target.value));
      dispatch(isFieldUpdate(props, event.target.value, fieldName));
    }
  };
